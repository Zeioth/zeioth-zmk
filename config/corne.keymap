// Copyright (c) 2022 Zeioth (Adrian Lopez)
// License: Creative Commons 3.0


/* PERSONAL NOTES: 
 1. On vim you can enable C syntax for this file:
    :set syntax=C 
*/


// Includes
// ---------------------------------------
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "./helpers.h"

// LAYER ALIASES
// ---------------------------------------
#define DEFAULT 0
#define SUPER   1
#define LOWER   2
#define RAISE   3
#define HYPER   4
#define ARROW   5
#define CONFIG  6
#define ANDROID 7
#define NONE    0

// SPANISH KEYCODE ALIASES
// ---------------------------------------
#define ES_MINS SLASH // -
#define ES_ACUT QUOT  // ´ (dead)
#define ES_GRV  LBRC  // ` (dead)
#define ES_QUOT MINUS // '
#define ES_IEXL EQUAL // ¡
#define ES_PLUS RBRC  // +
#define ES_MORD GRAVE // º
#define ES_LABK NUBS  // <
#define ES_CCED NUHS  // Ç

// TRI-LAYERS
// ----------------------------------------------------------------------
ZMK_CONDITIONAL_LAYER(SUPER RAISE,  HYPER)    // SUPER y RAISE  = HYPER
ZMK_CONDITIONAL_LAYER(SUPER CONFIG, CONFIG)   // SUPER y CONFIG = CONFIG
ZMK_CONDITIONAL_LAYER(LOWER RAISE,  ANDROID)  // LOWER y RAISE  = CONFIG (Once layer swap is implemented in ZMK (#1572), use it to create a mode, instead of a tri-layer)


// KEYMAPS
// ----------------------------------------------------------------------
ZMK_LAYER(default_layer, //  ########################################################################################################################################################

     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          &kp TAB       &kp Q         &kp D         &kp R         &kp W         &kp B             &kp J         &kp F         &kp U         &kp P         &kp SEMI      &CKC_BSPC
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &kp LCTRL     &kp A         &kp S         &kp H         &kp T         &kp G             &kp Y         &kp N         &kp E         &kp O         &kp I         &CKC_ACCENT
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &kp LSHFT     &kp Z         &kp X         &kp M         &kp C         &kp V             &kp K         &kp L         &kp COMMA     &kp DOT       &kp FSLH      &CKC_RSFT
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                                    &mo SUPER     &mo LOWER     &kp SPACE         &kp RET       &mo RAISE     &mt LALT ESC
     //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)
ZMK_LAYER(super_layer,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬───────────────┬─────────────┬─────────────╮
          &kp LGUI      &M_LOCK       &kp K_VOL_UP  &kp K_VOL_DN  &kp K_MUTE    &I3_KILL          &I3_XKILL     &kp K_NEXT    &kp K_PREV    &kp K_PP       &M_PWMENU     &kp RALT
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼───────────────┼─────────────┼─────────────┤
          &kp LCTRL     &M_WS7        &M_WS1        &M_WS2        &M_WS3        &I3_FS            &I3_WINTAB    &M_WS4        &M_WS5        &M_WS6         &M_WS8        &mt LALT ESC
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼───────────────┼─────────────┼─────────────┤
          &kp LSHFT     &I3_DISPLAYS  &I3_RESIZE    &I3_MOVE      &I3_SPAD      &none             &none         &I3_PW        &I3_NW        &I3_SCREENSHOT &I3_RESET     &kp RSHFT
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼───────────────┼─────────────┼─────────────┤
                                                    &mo SUPER    &mo LOWER      &mo CONFIG        &I3_FLOAT     &mo RAISE     &mt LALT ESC
     //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)
ZMK_LAYER(lower_layer,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬──────────────┬─────────────┬─────────────┬─────────────╮
          &kp LGUI      &kp N4        &kp N3        &kp N2        &kp N1        &kp N5            &kp N0        &kp N6        &kp N7         &kp N8        &kp N9        &kp RALT
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼──────────────┼─────────────┼─────────────┼─────────────┤
          &kp LCTRL     &CKC_EXCLAM   &CKC_HASH     &CKC_QUOT     &CKC_DQUOT    &CKC_PERC         &CKC_PLUS     &CKC_MINUS    &CKC_ASTERISK  &CKC_SLASH    &CKC_EQUAL    &mt LALT ESC
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼──────────────┼─────────────┼─────────────┼─────────────┤
          &kp LSHFT     &CKC_LESS     &CKC_MORE     &CKC_O_PAR    &CKC_C_PAR    &CKC_AND          &CKC_OR       &CKC_C_CUR    &CKC_O_CUR     &CKC_C_BRK    &CKC_O_BRK    &CKC_RSFT
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼──────────────┼─────────────┼─────────────┼─────────────┤
                                                    &mo SUPER     &mo LOWER     &kp TAB           &kp TAB       &mo RAISE     &kp DEL
     //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴──────────────╯
)
ZMK_LAYER(raise_layer,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬──────────────┬─────────────┬─────────────┬─────────────╮
          &kp LGUI      &VIM_DIT      &VIM_DIP      &VIM_DIS      &VIM_DIW      &VIM_DIB          &kp HOME      &kp END       &kp PAGE_DOWN &kp PAGE_UP    &none         &none
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼──────────────┼─────────────┼─────────────┼─────────────┤
          &kp LCTRL     &VIM_CIT      &VIM_CIP      &VIM_CIS      &VIM_CIW      &VIM_CIB          &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT      &none         &none
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼──────────────┼─────────────┼─────────────┼─────────────┤
          &kp LSHFT     &VIM_VIT      &VIM_VIP      &VIM_VIS      &VIM_VIW      &VIM_VIB          &none         &VIM_GMD      &VIM_GMU      &VIM_GTD       &VIM_GTU      &CKC_RSFT
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼──────────────┼─────────────┼─────────────┼─────────────┤
                                                    &mo SUPER     &mo LOWER     &CKC_CTRLBS       &CKC_CTRLBS   &mo RAISE     &none
     //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴──────────────╯
)
ZMK_LAYER(hyper_layer,
     // ╭─────────────┬─────────────┬───────────────────┬───────────────────┬──────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬────────────────╮
          &M_WEATHER    &M_CBACKUP    &M_UPDATE_PACKAGES  &M_ROFI_SHORTCUTS   &M_ROFI_EMOJI  &M_FILEX          &M_RANGER     &none          &none        &none         &M_VIM        &M_ROFI_MANUALS
     // ├─────────────┼─────────────┼───────────────────┼───────────────────┼──────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼────────────────┤
          &kp LCTRL     &kp F11       &M_ROFI_DOCS        &M_ROFI_ACTIVITIES  &M_ROFI        &M_CALC           &none         &none         &none         &none         &kp F12       &kp GRAVE
     // ├─────────────┼─────────────┼───────────────────┼───────────────────┼──────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼────────────────┤
          &kp LSHFT     &kp F4        &kp F3              &kp F2              &kp F1         &kp F5            &kp F10       &kp F6        &kp F7        &kp F8        &kp F9        &CKC_RSFT
     // ╰─────────────┼─────────────┼───────────────────┼───────────────────┼──────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼────────────────┤
                                                          &none               &mo LOWER      &none             &none         &none         &kp RALT
     //                                                 ╰───────────────────┴──────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)
ZMK_LAYER(arrow_layer,
     // ╭────────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬────────────────╮
          &CKC_EXIT_ARROW  &none         &none         &kp UP        &none         &none             &none         &none         &kp UP        &none         &none         &CKC_EXIT_ARROW
     // ├────────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼────────────────┤
          &CKC_EXIT_ARROW  &none         &kp LEFT      &kp DOWN      &kp RIGHT     &none             &none         &kp LEFT      &kp DOWN      &kp RIGHT     &none         &CKC_EXIT_ARROW
     // ├────────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼────────────────┤
          &CKC_EXIT_ARROW  &none         &none         &none         &none         &kp UP            &kp UP        &none         &none         &none         &none         &CKC_EXIT_ARROW
     // ╰────────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼────────────────┤
                                                       &kp LEFT      &kp DOWN      &kp RIGHT         &kp LEFT      &kp DOWN      &kp RIGHT
     //                                              ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)
ZMK_LAYER(config_layer,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          &none         &none         &none         &none         &none         &none             &none         &none         &none         &none         &none         &none
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &none         &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_SEL 4      &none         &M_HELP       &M_VIM_HELP   &none         &none         &none
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &none         &none         &none         &none         &bt BT_CLR    &none             &none         &none         &none         &none         &none         &none
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                                    &none         &none         &none             &none         &none         &none
     //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)
ZMK_LAYER(android_layer,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
          &none         &none         &none         &none         &none         &A_KILLAPP        &A_FILEX      &none         &none         &none         &none         &none
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &none         &none         &A_NOTIF      &A_SEARCH     &A_MENU       &none             &none         &A_CYCLEAPPL  &A_CYCLEAPPR  &none         &none         &none
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
          &none         &A_DEX        &none         &none         &A_START      &none             &none         &none         &none         &none         &none         &none
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                                    &none         &none         &none             &none         &none         &none
     //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)


// BASE LAYER MACROS 
// -----------------------------------------------------------------------
ZMK_BEHAVIOR(CKC_CTRLBS, macro,     bindings = <&kp LC(BSPC)>;)                                      // CTRL+BACKSPACE
ZMK_BEHAVIOR(CKC_BSPC,   mod_morph, bindings = <&kp BSPC>, <&kp DEL>; mods = <(MOD_LSFT|MOD_RSFT)>;) // BACKSPACE AND DEL
ZMK_BEHAVIOR(CKC_RSFT,   mod_morph, bindings = <&kp RSHFT>, <&tog ARROW>;  mods = <(MOD_LSFT)>;)     // Enable and lock ARROW MODE when LSHIFT+RSHIFT are holded together in that order.

// SUPER LAYER MACROS 
// -----------------------------------------------------------------------
ZMK_BEHAVIOR(M_WS1,         macro, bindings = <&kp LG(N1)>;)        // WORKSPACE 1
ZMK_BEHAVIOR(M_WS2,         macro, bindings = <&kp LG(N2)>;)        // WORKSPACE 2
ZMK_BEHAVIOR(M_WS3,         macro, bindings = <&kp LG(N3)>;)        // WORKSPACE 3
ZMK_BEHAVIOR(M_WS4,         macro, bindings = <&kp LG(N4)>;)        // WORKSPACE 4
ZMK_BEHAVIOR(M_WS5,         macro, bindings = <&kp LG(N5)>;)        // WORKSPACE 5
ZMK_BEHAVIOR(M_WS6,         macro, bindings = <&kp LG(N6)>;)        // WORKSPACE 6
ZMK_BEHAVIOR(M_WS7,         macro, bindings = <&kp LG(N7)>;)        // WORKSPACE 7
ZMK_BEHAVIOR(M_WS8,         macro, bindings = <&kp LG(N8)>;)        // WORKSPACE 8
ZMK_BEHAVIOR(M_LOCK,        macro, bindings = <&kp LS(LG(L))>;)     // LOCK SESSION
ZMK_BEHAVIOR(M_PWMENU,      macro, bindings = <&kp LS(LG(E))>;)     // POWER MENU
ZMK_BEHAVIOR(I3_FS,         macro, bindings = <&kp LG(F)>;)         // I3 FULL SCREEN
ZMK_BEHAVIOR(I3_DISPLAYS,   macro, bindings = <&kp LS(LG(D))>;)     // I3 DISPLAY MODE
ZMK_BEHAVIOR(I3_SCREENSHOT, macro, bindings = <&kp LS(LG(S))>;)     // I3 SCREENSHOT MODE
ZMK_BEHAVIOR(I3_RESIZE,     macro, bindings = <&kp LS(LG(R))>;)     // I3 RESIZE MODE
ZMK_BEHAVIOR(I3_MOVE,       macro, bindings = <&kp LS(LG(A))>;)     // I3 MOVE MODE
ZMK_BEHAVIOR(I3_SPAD,       macro, bindings = <&kp LG(ES_MINS)>;)   // I3 SCRATCHPAD (CYCLE)
ZMK_BEHAVIOR(I3_WINTAB,     macro, bindings = <&kp LG(TAB)>;)       // I3 WINTAB
ZMK_BEHAVIOR(I3_KILL,       macro, bindings = <&kp LS(LG(Q))>;)     // I3 KILL
ZMK_BEHAVIOR(I3_XKILL,      macro, bindings = <&kp LS(LG(X))>;)     // I3 XKILL
ZMK_BEHAVIOR(I3_PW,         macro, bindings = <&kp LG(PG_DN)>;)     // I3 PREVIOUS WINDOW
ZMK_BEHAVIOR(I3_NW,         macro, bindings = <&kp LG(PG_UP)>;)     // I3 NEXT WINDOW
ZMK_BEHAVIOR(I3_RESET,      macro, bindings = <&kp LS(LG(C))>, 
                                              <&kp LS(LG(R))>;)     // I3 RESET
ZMK_BEHAVIOR(I3_FLOAT,      macro, bindings = <&kp LS(LG(SPACE))>;) // I3 FLOAT (TOGGLE)

// LOWER LAYER MACROS
// -----------------------------------------------------------------------
ZMK_BEHAVIOR(CKC_ACCENT,   mod_morph, bindings = <&kp ES_ACUT>,     <&kp ES_GRV>;       mods = <(MOD_LSFT|MOD_RSFT)>;) // ´ and `
ZMK_BEHAVIOR(CKC_HASH,     mod_morph, bindings = <&kp RA(N3)>,      <&kp RA(N4)>;       mods = <(MOD_LSFT|MOD_RSFT)>;) // #
ZMK_BEHAVIOR(CKC_QUOT,     mod_morph, bindings = <&kp ES_QUOT>,     <&kp LS(N3)>;       mods = <(MOD_LSFT|MOD_RSFT)>;) // ' and · (bullet)
ZMK_BEHAVIOR(CKC_DQUOT,    mod_morph, bindings = <&kp LS(N2)>,      <&kp LS(ES_ACUT)>;  mods = <(MOD_LSFT|MOD_RSFT)>;) // ]
ZMK_BEHAVIOR(CKC_QMA,      mod_morph, bindings = <&kp LS(ES_QUOT)>, <&kp LS(ES_IEXL)>;  mods = <(MOD_LSFT|MOD_RSFT)>;) // ? and ¿
ZMK_BEHAVIOR(CKC_EXCLAM,   mod_morph, bindings = <&kp LS(N1)>,      <&kp ES_IEXL>;      mods = <(MOD_LSFT|MOD_RSFT)>;) // ! and ¡
ZMK_BEHAVIOR(CKC_PERC,     mod_morph, bindings = <&kp LS(N5)>,      <&kp RA(N6)>;       mods = <(MOD_LSFT|MOD_RSFT)>;) // % and ¬
ZMK_BEHAVIOR(CKC_PLUS,     mod_morph, bindings = <&kp ES_PLUS>,     <&kp RA(N2)>;       mods = <(MOD_LSFT|MOD_RSFT)>;) // +
ZMK_BEHAVIOR(CKC_MINUS,    mod_morph, bindings = <&kp ES_MINS>,     <&kp LS(ES_MINS)>;  mods = <(MOD_LSFT|MOD_RSFT)>;) // - and _
ZMK_BEHAVIOR(CKC_ASTERISK, mod_morph, bindings = <&kp LS(ES_PLUS)>, <&kp LS(ES_GRV)>;   mods = <(MOD_LSFT|MOD_RSFT)>;) // * and ^
ZMK_BEHAVIOR(CKC_SLASH,    mod_morph, bindings = <&kp LS(N7)>,      <&kp RA(ES_MORD)>;  mods = <(MOD_LSFT|MOD_RSFT)>;) // '/' and '\'
ZMK_BEHAVIOR(CKC_EQUAL,    mod_morph, bindings = <&kp LS(N0)>,      <&kp LS(N0)>;       mods = <(MOD_LSFT|MOD_RSFT)>;) // =
ZMK_BEHAVIOR(CKC_LESS,     mod_morph, bindings = <&kp ES_LABK>,     <&kp RA(Y)>;        mods = <(MOD_LSFT|MOD_RSFT)>;) // < and ←
ZMK_BEHAVIOR(CKC_MORE,     mod_morph, bindings = <&kp LS(ES_LABK)>, <&kp RA(I)>;        mods = <(MOD_LSFT|MOD_RSFT)>;) // > and →
ZMK_BEHAVIOR(CKC_O_PAR,    mod_morph, bindings = <&kp LS(N8)>,      <&kp RA(E)>;        mods = <(MOD_LSFT|MOD_RSFT)>;) // ( and €
ZMK_BEHAVIOR(CKC_C_PAR,    mod_morph, bindings = <&kp LS(N9)>,      <&kp LS(N4)>;       mods = <(MOD_LSFT|MOD_RSFT)>;) // ) and $
ZMK_BEHAVIOR(CKC_AND,      mod_morph, bindings = <&kp LS(N6)>,      <&kp LS(ES_MORD)>;  mods = <(MOD_LSFT|MOD_RSFT)>;) // & and ª 
ZMK_BEHAVIOR(CKC_OR,       mod_morph, bindings = <&kp RA(N1)>,      <&kp ES_MORD>;      mods = <(MOD_LSFT|MOD_RSFT)>;) // || and º 
ZMK_BEHAVIOR(CKC_O_CUR,    mod_morph, bindings = <&kp RA(ES_ACUT)>, <&kp RA(ES_ACUT)>;  mods = <(MOD_LSFT|MOD_RSFT)>;) // { 
ZMK_BEHAVIOR(CKC_C_CUR,    mod_morph, bindings = <&kp RA(ES_CCED)>, <&kp RA(ES_CCED)>;  mods = <(MOD_LSFT|MOD_RSFT)>;) // }
ZMK_BEHAVIOR(CKC_O_BRK,    mod_morph, bindings = <&kp RA(ES_GRV)>,  <&kp RA(ES_GRV)>;   mods = <(MOD_LSFT|MOD_RSFT)>;) // [
ZMK_BEHAVIOR(CKC_C_BRK,    mod_morph, bindings = <&kp RA(ES_PLUS)>, <&kp RA(ES_PLUS)>;  mods = <(MOD_LSFT|MOD_RSFT)>;) // ]

// RAISE LAYER MACROS
// -----------------------------------------------------------------------
ZMK_BEHAVIOR(VIM_CIT,      macro, bindings = <&kp C>, <&kp I>, <&kp T>;) // change inner tag
ZMK_BEHAVIOR(VIM_CIP,      macro, bindings = <&kp C>, <&kp I>, <&kp P>;) // change inner paragraph
ZMK_BEHAVIOR(VIM_CIS,      macro, bindings = <&kp C>, <&kp I>, <&kp S>;) // change inner sentence
ZMK_BEHAVIOR(VIM_CIW,      macro, bindings = <&kp C>, <&kp I>, <&kp W>;) // change inner word
ZMK_BEHAVIOR(VIM_CIB,      macro, bindings = <&kp C>, <&kp I>, <&kp B>;) // change inner block of code {}
ZMK_BEHAVIOR(VIM_VIT,      macro, bindings = <&kp V>, <&kp I>, <&kp T>;) // visual inner tag (selection)
ZMK_BEHAVIOR(VIM_VIP,      macro, bindings = <&kp V>, <&kp I>, <&kp P>;) // visual inner paragraph (selection)
ZMK_BEHAVIOR(VIM_VIS,      macro, bindings = <&kp V>, <&kp I>, <&kp S>;) // visual inner sentence (selection)
ZMK_BEHAVIOR(VIM_VIW,      macro, bindings = <&kp V>, <&kp I>, <&kp W>;) // visual inner word (selection)
ZMK_BEHAVIOR(VIM_VIB,      macro, bindings = <&kp V>, <&kp I>, <&kp B>;) // visual inner block of code {}
ZMK_BEHAVIOR(VIM_DIT,      macro, bindings = <&kp D>, <&kp I>, <&kp T>;) // delete inner tag
ZMK_BEHAVIOR(VIM_DIP,      macro, bindings = <&kp D>, <&kp I>, <&kp P>;) // delete inner paragraph
ZMK_BEHAVIOR(VIM_DIS,      macro, bindings = <&kp D>, <&kp I>, <&kp S>;) // delete inner sentence
ZMK_BEHAVIOR(VIM_DIW,      macro, bindings = <&kp D>, <&kp I>, <&kp W>;) // delete inner word
ZMK_BEHAVIOR(VIM_DIB,      macro, bindings = <&kp D>, <&kp I>, <&kp B>;) // delete inner block of code {}
ZMK_BEHAVIOR(VIM_GMD,      macro, bindings = <&kp G>, <&kp D>, <&kp M>;) // Go method - down [m
ZMK_BEHAVIOR(VIM_GMU,      macro, bindings = <&kp G>, <&kp M>, <&kp U>;) // Go method - up ]m
ZMK_BEHAVIOR(VIM_GTD,      macro, bindings = <&kp G>, <&kp T>, <&kp D>;) // Go tag/class - down ,c1/]]
ZMK_BEHAVIOR(VIM_GTU,      macro, bindings = <&kp G>, <&kp T>, <&kp U>;) // Go tag/class - up ,c2/[[

// HYPER LAYER MACROS
// -----------------------------------------------------------------------
ZMK_BEHAVIOR(M_CBACKUP,         macro, bindings = <&kp RA(F11)>;)    // Spawns a term → Encrypted backup to the cloud
ZMK_BEHAVIOR(M_UPDATE_PACKAGES, macro, bindings = <&kp LC(RA(B))>;)  // Spawns a term → Perform system update
ZMK_BEHAVIOR(M_ROFI,            macro, bindings = <&kp RA(D)>;)      // Spawns the application launcher
ZMK_BEHAVIOR(M_ROFI_SHORTCUTS,  macro, bindings = <&kp LC(RA(S))>;)  // Spawns rofi-shortcuts by zeioth
ZMK_BEHAVIOR(M_ROFI_EMOJI,      macro, bindings = <&kp LC(RA(E))>;)  // Shows all emojis and copy selection to clipboard
ZMK_BEHAVIOR(M_CALC,            macro, bindings = <&kp RA(F8)>;)     // Open calculator
ZMK_BEHAVIOR(M_ROFI_MANUALS,    macro, bindings = <&kp LC(RA(M))>;)  // Open rofi-zeal by zeioth 
ZMK_BEHAVIOR(M_ROFI_DOCS,       macro, bindings = <&kp LS(LG(T))>;)  // Open rofi and browse in the documentation of my projects
ZMK_BEHAVIOR(M_ROFI_ACTIVITIES, macro, bindings = <&kp LG(T)>;)      // Open the activities  selector
ZMK_BEHAVIOR(M_RANGER,          macro, bindings = <&kp RA(F1)>;)     // Open ranger TUI file browser 
ZMK_BEHAVIOR(M_FILEX,           macro, bindings = <&kp RA(F12)>;)    // Open GUI file browser 
ZMK_BEHAVIOR(M_VIM,             macro, bindings = <&kp RA(F10)>;)    // Open VIM 
ZMK_BEHAVIOR(M_WEATHER,         macro, bindings = <&kp LC(RA(W))>;)  // Open TUI weather 

// ARROW MODE LAYER MACROS
// -----------------------------------------------------------------------
ZMK_BEHAVIOR(CKC_EXIT_ARROW,    macro, bindings = <&tog ARROW>;)    // EXIT ARROW MODE


// CONFIG LAYER MACROS
// -----------------------------------------------------------------------
// ZMK_BEHAVIOR(MODE_ANDROID,      macro, bindings = <&ls android_mode_layer>;)     // Toggles ANDROID mode on/off
//                                                                                  TODO: Once ZMK #1572 is cleared.
ZMK_BEHAVIOR(M_HELP,        macro, bindings = <&kp LS(LG(H))>;)     // SHOW KEYBOARD HELP
ZMK_BEHAVIOR(M_VIM_HELP,    macro, bindings = <&kp LS(LG(V))>;)     // SHOW VIM HELP

// ANDROID LAYER MACROS
// -----------------------------------------------------------------------
ZMK_BEHAVIOR(A_CYCLEAPPL,  macro, bindings = <&kp LA(TAB)>;)        // Cycles through opened apps (left)
ZMK_BEHAVIOR(A_CYCLEAPPR,  macro, bindings = <&kp LS(LA(TAB))>;)    // Allow cycling through apps (right)
ZMK_BEHAVIOR(A_START,      macro, bindings = <&kp LG(RET)>;)        // Go to the main screen
ZMK_BEHAVIOR(A_KILLAPP,    macro, bindings = <&kp LA(F4)>;)         // Closes the active app
ZMK_BEHAVIOR(A_SEARCH,     macro, bindings = <&kp LG(F)>;)          // Search and open an application
ZMK_BEHAVIOR(A_NOTIF,      macro, bindings = <&kp RG(N)>;)          // Open notifications. Navigate with tab, close with esc
ZMK_BEHAVIOR(A_DEX,        macro, bindings = <&kp LG(W)>;)          // Toggles DEX mode if the device supports it
ZMK_BEHAVIOR(A_FILEX,      macro, bindings = <&kp LS(LG(R))>;)      // Open default file browser
ZMK_BEHAVIOR(A_MENU,       macro, bindings = <&kp LG(RET)>,
                                             <&kp LA(A)>;)          // Open the application menu

